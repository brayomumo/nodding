// .proto file for Node networking and RPC-ing

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: protos/node_net.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message definitions
// message type for a InviteGreeting in Invite rpc
type InviteGreeting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InviteToken   string                 `protobuf:"bytes,1,opt,name=inviteToken,proto3" json:"inviteToken,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteGreeting) Reset() {
	*x = InviteGreeting{}
	mi := &file_protos_node_net_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteGreeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteGreeting) ProtoMessage() {}

func (x *InviteGreeting) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_net_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteGreeting.ProtoReflect.Descriptor instead.
func (*InviteGreeting) Descriptor() ([]byte, []int) {
	return file_protos_node_net_proto_rawDescGZIP(), []int{0}
}

func (x *InviteGreeting) GetInviteToken() string {
	if x != nil {
		return x.InviteToken
	}
	return ""
}

func (x *InviteGreeting) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *InviteGreeting) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// InviteStatus type definition
type InviteStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Greeting      *InviteGreeting        `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteStatus) Reset() {
	*x = InviteStatus{}
	mi := &file_protos_node_net_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteStatus) ProtoMessage() {}

func (x *InviteStatus) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_net_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteStatus.ProtoReflect.Descriptor instead.
func (*InviteStatus) Descriptor() ([]byte, []int) {
	return file_protos_node_net_proto_rawDescGZIP(), []int{1}
}

func (x *InviteStatus) GetGreeting() *InviteGreeting {
	if x != nil {
		return x.Greeting
	}
	return nil
}

func (x *InviteStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InviteStatus) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Beat type definition
type Beat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Beat) Reset() {
	*x = Beat{}
	mi := &file_protos_node_net_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Beat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beat) ProtoMessage() {}

func (x *Beat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_net_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beat.ProtoReflect.Descriptor instead.
func (*Beat) Descriptor() ([]byte, []int) {
	return file_protos_node_net_proto_rawDescGZIP(), []int{2}
}

func (x *Beat) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Beat) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Log type definition
type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_protos_node_net_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_net_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_protos_node_net_proto_rawDescGZIP(), []int{3}
}

func (x *Log) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Log) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type LogSyncStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *Log                   `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogSyncStatus) Reset() {
	*x = LogSyncStatus{}
	mi := &file_protos_node_net_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogSyncStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSyncStatus) ProtoMessage() {}

func (x *LogSyncStatus) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_net_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSyncStatus.ProtoReflect.Descriptor instead.
func (*LogSyncStatus) Descriptor() ([]byte, []int) {
	return file_protos_node_net_proto_rawDescGZIP(), []int{4}
}

func (x *LogSyncStatus) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *LogSyncStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LogSyncStatus) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_protos_node_net_proto protoreflect.FileDescriptor

var file_protos_node_net_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x71, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3e, 0x0a, 0x04, 0x42, 0x65, 0x61, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3d, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x5d, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x32, 0x75, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x06,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x0d, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x12, 0x05, 0x2e, 0x42, 0x65, 0x61, 0x74, 0x1a, 0x05, 0x2e, 0x42, 0x65,
	0x61, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x21, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63,
	0x4c, 0x6f, 0x67, 0x12, 0x04, 0x2e, 0x4c, 0x6f, 0x67, 0x1a, 0x0e, 0x2e, 0x4c, 0x6f, 0x67, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x42, 0x2a, 0x5a, 0x28, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x61, 0x79, 0x6f, 0x6d,
	0x75, 0x6d, 0x6f, 0x2f, 0x6e, 0x6f, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_protos_node_net_proto_rawDescOnce sync.Once
	file_protos_node_net_proto_rawDescData []byte
)

func file_protos_node_net_proto_rawDescGZIP() []byte {
	file_protos_node_net_proto_rawDescOnce.Do(func() {
		file_protos_node_net_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_node_net_proto_rawDesc), len(file_protos_node_net_proto_rawDesc)))
	})
	return file_protos_node_net_proto_rawDescData
}

var file_protos_node_net_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_protos_node_net_proto_goTypes = []any{
	(*InviteGreeting)(nil), // 0: InviteGreeting
	(*InviteStatus)(nil),   // 1: InviteStatus
	(*Beat)(nil),           // 2: Beat
	(*Log)(nil),            // 3: Log
	(*LogSyncStatus)(nil),  // 4: LogSyncStatus
}
var file_protos_node_net_proto_depIdxs = []int32{
	0, // 0: InviteStatus.greeting:type_name -> InviteGreeting
	3, // 1: LogSyncStatus.log:type_name -> Log
	0, // 2: Node.Invite:input_type -> InviteGreeting
	2, // 3: Node.Heatbeat:input_type -> Beat
	3, // 4: Node.SyncLog:input_type -> Log
	1, // 5: Node.Invite:output_type -> InviteStatus
	2, // 6: Node.Heatbeat:output_type -> Beat
	4, // 7: Node.SyncLog:output_type -> LogSyncStatus
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protos_node_net_proto_init() }
func file_protos_node_net_proto_init() {
	if File_protos_node_net_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_node_net_proto_rawDesc), len(file_protos_node_net_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_node_net_proto_goTypes,
		DependencyIndexes: file_protos_node_net_proto_depIdxs,
		MessageInfos:      file_protos_node_net_proto_msgTypes,
	}.Build()
	File_protos_node_net_proto = out.File
	file_protos_node_net_proto_goTypes = nil
	file_protos_node_net_proto_depIdxs = nil
}
